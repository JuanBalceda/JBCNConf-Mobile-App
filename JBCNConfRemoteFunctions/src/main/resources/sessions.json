[ {
  "slotId" : "5c196e1138da165f64820b2b_a_room_2_Tuesday_10:00_11:00",
  "roomId" : "a_room_2",
  "roomName" : "Room 2",
  "day" : "Tuesday",
  "fromTime" : "10:00",
  "fromTimeMillis" : 1559030400000,
  "toTime" : "11:00",
  "toTimeMillis" : 1559034000000,
  "talk" : {
    "id" : "5c196e1138da165f64820b2b",
    "title" : "Fantastic Frameworks and How to Avoid Them",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "As high-level programming languages users, we love bold promises of getting all our problems solved just by adding a few annotations. \n\nThose few annotations come often bundled with other magical techniques like classpath scanning or dynamic proxies… and creep into our domain models contributing to long-term maintainability issues... and/or consultancy and premium enterprise support costs.\n\nIn this session, we’ll have a look at the cons of adopting invasive frameworks and how we can minimize the problems they cause.",
    "summaryAsHtml" : "As high-level programming languages users, we love bold promises of getting all our problems solved just by adding a few annotations. \n\nThose few annotations come often bundled with other magical techniques like classpath scanning or dynamic proxies… and creep into our domain models contributing to long-term maintainability issues... and/or consultancy and premium enterprise support costs.\n\nIn this session, we’ll have a look at the cons of adopting invasive frameworks and how we can minimize the problems they cause.",
    "tags" : [ {
      "value" : "Java"
    }, {
      "value" : "Architecture"
    }, {
      "value" : "Methodology"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "dcf4d5f83bc2dab51fb90922055352668da14a18",
        "rel" : "dcf4d5f83bc2dab51fb90922055352668da14a18",
        "title" : "Grzegorz Piwowarek"
      },
      "name" : "Grzegorz Piwowarek"
    } ]
  }
}, {
  "slotId" : "5c196e0238da165f64820b2a_a_room_3_Wednesday_14:00_16:00",
  "roomId" : "a_room_3",
  "roomName" : "Room 3",
  "day" : "Wednesday",
  "fromTime" : "14:00",
  "fromTimeMillis" : 1559131200000,
  "toTime" : "16:00",
  "toTimeMillis" : 1559138400000,
  "talk" : {
    "id" : "5c196e0238da165f64820b2a",
    "title" : "The Istio Workshop",
    "talkType" : "workshop",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "The first generation of microservices was primarily shaped by Netflix OSS and leveraged by numerous Spring Cloud annotations all throughout your business logic. The next generation of microservices will leverage sidecars and a service mesh. In this session, we will give you a taste of Envoy and Istio, two open source projects that will change the way you write distributed Java applications on Kubernetes. Check out how we use Envoy and Istio to deal with traffic shaping, network fault-injection, A/B testing, dark launches, mirroring, and much more.",
    "summaryAsHtml" : "The first generation of microservices was primarily shaped by Netflix OSS and leveraged by numerous Spring Cloud annotations all throughout your business logic. The next generation of microservices will leverage sidecars and a service mesh. In this session, we will give you a taste of Envoy and Istio, two open source projects that will change the way you write distributed Java applications on Kubernetes. Check out how we use Envoy and Istio to deal with traffic shaping, network fault-injection, A/B testing, dark launches, mirroring, and much more.",
    "tags" : [ {
      "value" : "microservices"
    }, {
      "value" : "java"
    }, {
      "value" : "cloud native"
    }, {
      "value" : "service mesh"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "c5224c12852709f7ae60fa80d93f46fd2d64a5c4",
        "rel" : "c5224c12852709f7ae60fa80d93f46fd2d64a5c4",
        "title" : "Rafael Benevides"
      },
      "name" : "Rafael Benevides"
    } ]
  }
}, {
  "slotId" : "5c196e3638da165f64820b2d_a_room_4_Monday_09:00_10:00",
  "roomId" : "a_room_4",
  "roomName" : "Room 4",
  "day" : "Monday",
  "fromTime" : "09:00",
  "fromTimeMillis" : 1558940400000,
  "toTime" : "10:00",
  "toTimeMillis" : 1558944000000,
  "talk" : {
    "id" : "5c196e3638da165f64820b2d",
    "title" : "Kotlin & Implications in an IoT project ",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "beginner",
    "summary" : "Develop IoT solutions with Kotlin is possible thanks to the incorporation to Kotlin as a first class programming language to Android and the becoming of Android Things, an optimized version of Android for embedded devices. This talk is looking for explore the aspects around IoT projects, Hardware, Security, Server Side, Data Analysis from the hand of Android Things and Kotlin.\n\nThe Internet of Things is a technology that has been echoing for some time. Arriving to generate interesting and attractive solutions. It usually happens that those who develop this type of solutions know about the Hardware, or they only have knowledge of the Software side. This talk seeks to explore all those aspects around IoT in the hand of a real project for monitoring fishbowls (something that you can implement at home). \n\nIn the hardware side, we will use sensors and different technologies for handle the information obtained from these (Raspberry PI, Arduino, etc). Since we want to show how to use Kotlin for develop IoT solutions, we will use Android Things with Kotlin and Raspberry PI. \n\nThe server side, using Serverless or IoT cloud solutions, options to analyze our information. Finally, is important take some considerations over the security aspects in IoT projects, although there are not yet 100% solid solutions, there are already efforts to solve this.",
    "summaryAsHtml" : "Develop IoT solutions with Kotlin is possible thanks to the incorporation to Kotlin as a first class programming language to Android and the becoming of Android Things, an optimized version of Android for embedded devices. This talk is looking for explore the aspects around IoT projects, Hardware, Security, Server Side, Data Analysis from the hand of Android Things and Kotlin.\n\nThe Internet of Things is a technology that has been echoing for some time. Arriving to generate interesting and attractive solutions. It usually happens that those who develop this type of solutions know about the Hardware, or they only have knowledge of the Software side. This talk seeks to explore all those aspects around IoT in the hand of a real project for monitoring fishbowls (something that you can implement at home). \n\nIn the hardware side, we will use sensors and different technologies for handle the information obtained from these (Raspberry PI, Arduino, etc). Since we want to show how to use Kotlin for develop IoT solutions, we will use Android Things with Kotlin and Raspberry PI. \n\nThe server side, using Serverless or IoT cloud solutions, options to analyze our information. Finally, is important take some considerations over the security aspects in IoT projects, although there are not yet 100% solid solutions, there are already efforts to solve this.",
    "tags" : [ {
      "value" : "JVM langs (Kotlin)"
    }, {
      "value" : "IoT"
    }, {
      "value" : "Android"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "d43c4a28c6222750fcef9b5b50013ea8ed897d19",
        "rel" : "d43c4a28c6222750fcef9b5b50013ea8ed897d19",
        "title" : "Mercedes Wyss"
      },
      "name" : "Mercedes Wyss"
    } ]
  }
}, {
  "slotId" : "5c48ed3b9034ae38180b14e0_a_room_4_Wednesday_14:00_16:00",
  "roomId" : "a_room_4",
  "roomName" : "Room 4",
  "day" : "Wednesday",
  "fromTime" : "14:00",
  "fromTimeMillis" : 1559131200000,
  "toTime" : "16:00",
  "toTimeMillis" : 1559138400000,
  "talk" : {
    "id" : "5c48ed3b9034ae38180b14e0",
    "title" : "Retrospective Sailing Workshop",
    "talkType" : "workshop",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "beginner",
    "summary" : "Hands on workshop for teams to help implement and improve Retrospectives within teams. Agile retrospectives are a great practice for helping teams to reflect on what’s going well and what could be better, and identify opportunities for improvement and change.  Retrospectives within teams helps to encourage self organisation, management and improvement. Introduction to Retrospectives: Formats for running Retrospectives, Practical exercises – Retrospective Sailing Game, Facilitating a Retrospective, Outcomes and Measures using Retrospectives. Retrospective Sailing is an agile reflection game demonstrated in this hands-on workshop. You can play as an individual in any role, as part of a development team, or with clients and customers to help understand how your journey is going. It will give you a new, fun way to run a retrospective to help to gain your bearings, identify what’s putting the wind in your sails, the anchors holding you back, and discover hidden treasure. Then you’ll plot your course and map a way forward that raises those anchors and catches the tide and a fair wind. You will be introduced to the game and try it out. There will be case examples and tips for facilitating the game too. Join us for some constructive fun, practical outcomes, and a useful tool to take back to the office. Helping teams embed continuous reflection and improvement into their work. Retrospective Sailing helps teams to reflect and map their way forward easily, in a fun, tactile and visual way. Review what's going well, what could go better, and ensure you are responding regularly to the changing horizon.",
    "summaryAsHtml" : "Hands on workshop for teams to help implement and improve Retrospectives within teams. Agile retrospectives are a great practice for helping teams to reflect on what’s going well and what could be better, and identify opportunities for improvement and change.  Retrospectives within teams helps to encourage self organisation, management and improvement. Introduction to Retrospectives: Formats for running Retrospectives, Practical exercises – Retrospective Sailing Game, Facilitating a Retrospective, Outcomes and Measures using Retrospectives. Retrospective Sailing is an agile reflection game demonstrated in this hands-on workshop. You can play as an individual in any role, as part of a development team, or with clients and customers to help understand how your journey is going. It will give you a new, fun way to run a retrospective to help to gain your bearings, identify what’s putting the wind in your sails, the anchors holding you back, and discover hidden treasure. Then you’ll plot your course and map a way forward that raises those anchors and catches the tide and a fair wind. You will be introduced to the game and try it out. There will be case examples and tips for facilitating the game too. Join us for some constructive fun, practical outcomes, and a useful tool to take back to the office. Helping teams embed continuous reflection and improvement into their work. Retrospective Sailing helps teams to reflect and map their way forward easily, in a fun, tactile and visual way. Review what's going well, what could go better, and ensure you are responding regularly to the changing horizon.",
    "tags" : [ {
      "value" : "Agile"
    }, {
      "value" : "Retrospectives"
    }, {
      "value" : "Teams"
    }, {
      "value" : "improvement"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "8ba341ede35371519196bc6a3c2cd11e4789c34a",
        "rel" : "8ba341ede35371519196bc6a3c2cd11e4789c34a",
        "title" : "Belinda Waldock"
      },
      "name" : "Belinda Waldock"
    } ]
  }
}, {
  "slotId" : "5c196e2c38da165f64820b2c_a_room_1_Monday_11:00_12:00",
  "roomId" : "a_room_1",
  "roomName" : "Room 1",
  "day" : "Monday",
  "fromTime" : "11:00",
  "fromTimeMillis" : 1558947600000,
  "toTime" : "12:00",
  "toTimeMillis" : 1558951200000,
  "talk" : {
    "id" : "5c196e2c38da165f64820b2c",
    "title" : "Bulletproof Java Enterprise Applications for The Hard Production Life",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "It’s one thing to develop Java Enterprise applications, to execute, and validate them in test environments. Running the application in production, however, is a whole other story. Production life is harsh, unforgivable and the ultimate verification whether your application is able to add value to its users. Besides knowing the Java Enterprise APIs, developers therefore also need to know how to meet production requirements.\n\nThis session shows which non-functional requirements we enterprise developers need to be aware of to build stable and resilient applications. We will see different resiliency approaches, such as circuit breakers, bulkheads, or backpressure, in action. We will implement these concepts using the Java Enterprise API, MicroProfile, and certain Java EE extensions. Furthermore, we will see, how especially service meshes enable us to add resiliency to multiple microservices in a transparent, redundancy-free fashion.\n\nAdding telemetry to our applications is crucial to gather insights about the application under production load. We will see how to enhance our microservices with concerns such as monitoring, tracing, or logging in a minimalistic way.\n\nAll of the time will be spent live-demoing Java Enterprise applications that are deployed to an Istio cluster.",
    "summaryAsHtml" : "It’s one thing to develop Java Enterprise applications, to execute, and validate them in test environments. Running the application in production, however, is a whole other story. Production life is harsh, unforgivable and the ultimate verification whether your application is able to add value to its users. Besides knowing the Java Enterprise APIs, developers therefore also need to know how to meet production requirements.\n\nThis session shows which non-functional requirements we enterprise developers need to be aware of to build stable and resilient applications. We will see different resiliency approaches, such as circuit breakers, bulkheads, or backpressure, in action. We will implement these concepts using the Java Enterprise API, MicroProfile, and certain Java EE extensions. Furthermore, we will see, how especially service meshes enable us to add resiliency to multiple microservices in a transparent, redundancy-free fashion.\n\nAdding telemetry to our applications is crucial to gather insights about the application under production load. We will see how to enhance our microservices with concerns such as monitoring, tracing, or logging in a minimalistic way.\n\nAll of the time will be spent live-demoing Java Enterprise applications that are deployed to an Istio cluster.",
    "tags" : [ {
      "value" : "Enterprise Java"
    }, {
      "value" : "Production Environments"
    }, {
      "value" : "Cloud Native Java"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "1799a6d25dbe9b65e5a25078815b20fc9af956f4",
        "rel" : "1799a6d25dbe9b65e5a25078815b20fc9af956f4",
        "title" : "Sebastian Daschner"
      },
      "name" : "Sebastian Daschner"
    } ]
  }
}, {
  "slotId" : "5c3b3e4538da16698cf41b0a_a_room_3_Tuesday_11:00_12:00",
  "roomId" : "a_room_3",
  "roomName" : "Room 3",
  "day" : "Tuesday",
  "fromTime" : "11:00",
  "fromTimeMillis" : 1559034000000,
  "toTime" : "12:00",
  "toTimeMillis" : 1559037600000,
  "talk" : {
    "id" : "5c3b3e4538da16698cf41b0a",
    "title" : "Live Refactoring Session: Getting rid of dirty code",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "In this live hacking, we will look at three typical starting situations for refactoring dirty code. In the first example, we will wade through rotten code: an untested, miserably long, unmaintainable method without any test coverage. In the second code example, it gets a little better. The method is still too long and barely maintainable, but it has some rudimentary test coverage. In the third code example, we look at a method that is fully covered by tests and is free of simple warnings, yet that has deeper structural problems that cannot be solved quickly. In this live coding you get practical advice on how to master a refactoring step by step - even in difficult situations.",
    "summaryAsHtml" : "In this live hacking, we will look at three typical starting situations for refactoring dirty code. In the first example, we will wade through rotten code: an untested, miserably long, unmaintainable method without any test coverage. In the second code example, it gets a little better. The method is still too long and barely maintainable, but it has some rudimentary test coverage. In the third code example, we look at a method that is fully covered by tests and is free of simple warnings, yet that has deeper structural problems that cannot be solved quickly. In this live coding you get practical advice on how to master a refactoring step by step - even in difficult situations.",
    "tags" : [ {
      "value" : "Java"
    }, {
      "value" : "refactoring"
    }, {
      "value" : "live coding"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "1910f00e3b6a8220979782a1355b8570de1beca0",
        "rel" : "1910f00e3b6a8220979782a1355b8570de1beca0",
        "title" : "Marcus Biel"
      },
      "name" : "Marcus Biel"
    } ]
  }
}, {
  "slotId" : "5c48ed809034ae38180b14e2_a_room_3_Tuesday_09:00_10:00",
  "roomId" : "a_room_3",
  "roomName" : "Room 3",
  "day" : "Tuesday",
  "fromTime" : "09:00",
  "fromTimeMillis" : 1559026800000,
  "toTime" : "10:00",
  "toTimeMillis" : 1559030400000,
  "talk" : {
    "id" : "5c48ed809034ae38180b14e2",
    "title" : "Continuous deployment to Kubernetes with the Google Container Tools",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "Kubernetes has become the orchestrator of choice to deploy applications. But what about Java developer's day to day job of developing those applications? Developing with containers is not always easy nor enjoyable.\n\nGoogle has launched a set of Open-Source projects that focus on Developer Experience in a world of containers.\n\nWhether you'd like to continuously deploy to Kubernetes with Skaffold, safely build images on a cluster with Kaniko or build images much faster with Jib, come learn how to setup a great CI/CD.",
    "summaryAsHtml" : "Kubernetes has become the orchestrator of choice to deploy applications. But what about Java developer's day to day job of developing those applications? Developing with containers is not always easy nor enjoyable.\n\nGoogle has launched a set of Open-Source projects that focus on Developer Experience in a world of containers.\n\nWhether you'd like to continuously deploy to Kubernetes with Skaffold, safely build images on a cluster with Kaniko or build images much faster with Jib, come learn how to setup a great CI/CD.",
    "tags" : [ {
      "value" : "kubernetes"
    }, {
      "value" : "containers"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "b728a02f2048c81298ca0a5a9bee9e82d7318f18",
        "rel" : "b728a02f2048c81298ca0a5a9bee9e82d7318f18",
        "title" : "David Gageot"
      },
      "name" : "David Gageot"
    } ]
  }
}, {
  "slotId" : "5c1bbfa338da160e621b7a80_a_room_4_Monday_11:00_12:00",
  "roomId" : "a_room_4",
  "roomName" : "Room 4",
  "day" : "Monday",
  "fromTime" : "11:00",
  "fromTimeMillis" : 1558947600000,
  "toTime" : "12:00",
  "toTimeMillis" : 1558951200000,
  "talk" : {
    "id" : "5c1bbfa338da160e621b7a80",
    "title" : "Micro Frontend: the microservice puzzle extended to frontend",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "beginner",
    "summary" : "Microservices are at the top of the hype right now and perhaps you’ve already fallen for them and are replacing your good old monolith for new shiny microservices on the back-end.\n\nBut have you ever considered doing the same on the front-end? Even hype-r (or crazy-er, we’ll let you judge), have you tried mixing different JavaScript frameworks (let’s say AngularJS, Angular and React for example) in a Single Page Application?\n\nThat’s what Micro Frontend is and that’s what we’ve done at Saagie. In this talk I’d like to give you feedback on the different architectures we’ve tried, their pros and cons and help you find which one would be the best for you, just in case you’d like to opt for the dark and crazy side of front-end.",
    "summaryAsHtml" : "Microservices are at the top of the hype right now and perhaps you’ve already fallen for them and are replacing your good old monolith for new shiny microservices on the back-end.\n\nBut have you ever considered doing the same on the front-end? Even hype-r (or crazy-er, we’ll let you judge), have you tried mixing different JavaScript frameworks (let’s say AngularJS, Angular and React for example) in a Single Page Application?\n\nThat’s what Micro Frontend is and that’s what we’ve done at Saagie. In this talk I’d like to give you feedback on the different architectures we’ve tried, their pros and cons and help you find which one would be the best for you, just in case you’d like to opt for the dark and crazy side of front-end.",
    "tags" : [ {
      "value" : "micro-services"
    }, {
      "value" : "front-end"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "df5c3701545056ca5229efe9b77ad91acf69ea02",
        "rel" : "df5c3701545056ca5229efe9b77ad91acf69ea02",
        "title" : "Audrey Neveu"
      },
      "name" : "Audrey Neveu"
    } ]
  }
}, {
  "slotId" : "5c36688538da16698cf41ae0_a_room_1_Tuesday_11:00_12:00",
  "roomId" : "a_room_1",
  "roomName" : "Room 1",
  "day" : "Tuesday",
  "fromTime" : "11:00",
  "fromTimeMillis" : 1559034000000,
  "toTime" : "12:00",
  "toTimeMillis" : 1559037600000,
  "talk" : {
    "id" : "5c36688538da16698cf41ae0",
    "title" : "Responsible Microservices",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "These days, you can’t swing a dry erase marker without hitting someone talking about microservices. Developers are studying Eric Evan’s prescient book Domain Driven Design. Teams are refactoring monolithic apps, looking for bounded contexts and defining a ubiquitous language. And while there have been countless articles, videos, and talks to help you convert to microservices, few have spent any appreciable time asking if a given application should be a microservice. In this talk, I will show you a set of factors you can apply to help you decide if something deserves to be a microservice or not. We’ll also look at what we need to do to maintain a healthy micro(services)biome.\n\nThere are many good reasons to use a microservices architecture. But there are no free lunches. The positives of microservices come with added complexity. Teams should happily take on that complexity...provided the application in question benefits from the upside of microservices. This talk will cut through the hype to help you make the right choice for your unique situation.",
    "summaryAsHtml" : "These days, you can’t swing a dry erase marker without hitting someone talking about microservices. Developers are studying Eric Evan’s prescient book Domain Driven Design. Teams are refactoring monolithic apps, looking for bounded contexts and defining a ubiquitous language. And while there have been countless articles, videos, and talks to help you convert to microservices, few have spent any appreciable time asking if a given application should be a microservice. In this talk, I will show you a set of factors you can apply to help you decide if something deserves to be a microservice or not. We’ll also look at what we need to do to maintain a healthy micro(services)biome.\n\nThere are many good reasons to use a microservices architecture. But there are no free lunches. The positives of microservices come with added complexity. Teams should happily take on that complexity...provided the application in question benefits from the upside of microservices. This talk will cut through the hype to help you make the right choice for your unique situation.",
    "tags" : [ {
      "value" : "Architecture"
    }, {
      "value" : "Microservices"
    }, {
      "value" : "Serverless"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "ab822b577be6a2418593327d0530f2e48da634a4",
        "rel" : "ab822b577be6a2418593327d0530f2e48da634a4",
        "title" : "Nate Schutta"
      },
      "name" : "Nate Schutta"
    } ]
  }
}, {
  "slotId" : "5c36675b38da16698cf41ade_a_room_2_Monday_09:00_10:00",
  "roomId" : "a_room_2",
  "roomName" : "Room 2",
  "day" : "Monday",
  "fromTime" : "09:00",
  "fromTimeMillis" : 1558940400000,
  "toTime" : "10:00",
  "toTimeMillis" : 1558944000000,
  "talk" : {
    "id" : "5c36675b38da16698cf41ade",
    "title" : "Nowadays Architecture Trends, from Monolith to Microservices and Serverless\t",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "In this session, attendees will learn about a real-world evolution to a Distributed Architecture without being involved of a complete Microservices Madness; we will be covering tips and tricks of an experience of a evolution of a huge EAR Core Banking Application and how we evolve to a modern distributed Architecture until the evolution of use 3rd party services and Serverless; tips, tricks, pros, cons and the reasons for being involved on move forward and present sample code as FaaS and explain the pitfalls of Serverless and the security concerns on this evolution. We will be using snippets code based on JAVA, JWT, JWS, Auth0, Spring Boot and Webflux on Oracle Cloud and Spring Cloud Functions on Amazon Lambdas.",
    "summaryAsHtml" : "In this session, attendees will learn about a real-world evolution to a Distributed Architecture without being involved of a complete Microservices Madness; we will be covering tips and tricks of an experience of a evolution of a huge EAR Core Banking Application and how we evolve to a modern distributed Architecture until the evolution of use 3rd party services and Serverless; tips, tricks, pros, cons and the reasons for being involved on move forward and present sample code as FaaS and explain the pitfalls of Serverless and the security concerns on this evolution. We will be using snippets code based on JAVA, JWT, JWS, Auth0, Spring Boot and Webflux on Oracle Cloud and Spring Cloud Functions on Amazon Lambdas.",
    "tags" : [ {
      "value" : "Java"
    }, {
      "value" : "Cloud"
    }, {
      "value" : "Serverless"
    }, {
      "value" : "Microservices"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "4f72f63b37fb9bb3781b7e7b1e3246b1364c02a2",
        "rel" : "4f72f63b37fb9bb3781b7e7b1e3246b1364c02a2",
        "title" : "Alberto Salazar"
      },
      "name" : "Alberto Salazar"
    } ]
  }
}, {
  "slotId" : "5c5b57ec38da160d5d9c8e12_a_room_3_Monday_09:00_10:00",
  "roomId" : "a_room_3",
  "roomName" : "Room 3",
  "day" : "Monday",
  "fromTime" : "09:00",
  "fromTimeMillis" : 1558940400000,
  "toTime" : "10:00",
  "toTimeMillis" : 1558944000000,
  "talk" : {
    "id" : "5c5b57ec38da160d5d9c8e12",
    "title" : "IoT Sensor Analytics with Apache Kafka, KSQL and TensorFlow",
    "talkType" : "talk",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "Large numbers of IoT devices lead to big data and the need for further processing and analysis. Apache Kafka is a highly scalable open source streaming platform to ingest, store, process and forward high volumes of data from thousands of IoT devices. KSQL is an open-source streaming SQL engine on top of Apache Kafka to make stream processing available to everyone.\n\nThis talk shows how to leverage Kafka and KSQL in an IoT sensor analytics scenario for predictive maintenance. A live demo shows how to embed and deploy Machine Learning models - built with frameworks like TensorFlow, DeepLearning4J or H2O - into mission-critical and scalable real time applications.\n",
    "summaryAsHtml" : "Large numbers of IoT devices lead to big data and the need for further processing and analysis. Apache Kafka is a highly scalable open source streaming platform to ingest, store, process and forward high volumes of data from thousands of IoT devices. KSQL is an open-source streaming SQL engine on top of Apache Kafka to make stream processing available to everyone.\n\nThis talk shows how to leverage Kafka and KSQL in an IoT sensor analytics scenario for predictive maintenance. A live demo shows how to embed and deploy Machine Learning models - built with frameworks like TensorFlow, DeepLearning4J or H2O - into mission-critical and scalable real time applications.\n",
    "tags" : [ {
      "value" : "java"
    }, {
      "value" : "machine learning"
    }, {
      "value" : "kafka"
    }, {
      "value" : "ksql"
    }, {
      "value" : "IoT"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "4933ebef38f82b62da601eb07e8362bb389cc560",
        "rel" : "4933ebef38f82b62da601eb07e8362bb389cc560",
        "title" : "Kai Waehner"
      },
      "name" : "Kai Waehner"
    } ]
  }
}, {
  "slotId" : "5c3b3b1938da16698cf41b09_a_room_2_Wednesday_09:00_12:00",
  "roomId" : "a_room_2",
  "roomName" : "Room 2",
  "day" : "Wednesday",
  "fromTime" : "09:00",
  "fromTimeMillis" : 1559113200000,
  "toTime" : "12:00",
  "toTimeMillis" : 1559124000000,
  "talk" : {
    "id" : "5c3b3b1938da16698cf41b09",
    "title" : "Full Stack Reactive with React and Spring WebFlux",
    "talkType" : "workshop",
    "track" : null,
    "trackId" : null,
    "lang" : "en",
    "audienceLevel" : "middle",
    "summary" : "You have streaming data and want to expose it as reactive streams with Spring Boot. Great! Spring WebFlux makes that pretty easy. But what about the UI? Can you stream that data to the UI and have it be reactive and constantly updating too? This session explores techniques for making your app fully reactive with Spring WebFlux and React. Mostly live coding, with plenty of time for Q & A in the midst of it all.",
    "summaryAsHtml" : "You have streaming data and want to expose it as reactive streams with Spring Boot. Great! Spring WebFlux makes that pretty easy. But what about the UI? Can you stream that data to the UI and have it be reactive and constantly updating too? This session explores techniques for making your app fully reactive with Spring WebFlux and React. Mostly live coding, with plenty of time for Q & A in the midst of it all.",
    "tags" : [ {
      "value" : "React"
    }, {
      "value" : "Spring WebFlux"
    }, {
      "value" : "RSocket"
    } ],
    "speakers" : [ {
      "link" : {
        "href" : "3b8f95a333469c079f0264b8b903184fe5082c05",
        "rel" : "3b8f95a333469c079f0264b8b903184fe5082c05",
        "title" : "Matt Raible"
      },
      "name" : "Matt Raible"
    } ]
  }
} ]